/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.dbmslab.hostelmanager;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cy34
 */
public class updateAttendence extends javax.swing.JFrame {

    
        // create variables for database connection
    Connection con = null;
    Statement st = null;
    PreparedStatement pst = null; 
    PreparedStatement pst1 = null;
    PreparedStatement pst2 = null;  
    ResultSet rs = null;
    
    /**
     * Creates new form updateAttendence
     */
    public updateAttendence() {
        initComponents();
        
                // initialize mysql connection
        try {
            final String URL = "jdbc:mysql://localhost:3306/hostelDB";
            final String username = "hosteluser";
            final String password = "";
            Class.forName("com.mysql.cj.jdbc.Driver");
                        con = DriverManager.getConnection(URL, username, password);
        } catch (ClassNotFoundException | SQLException ex) {
            //Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        getCombo();
        update_table("January");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        formPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        monthCombo = new javax.swing.JComboBox<>();
        txtFine = new javax.swing.JTextField();
        increaseCountBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        txtCount = new javax.swing.JTextField();
        insertBtn = new javax.swing.JButton();
        admnCombo = new javax.swing.JComboBox<>();
        insertAllBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        homeBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        attendenceTable = new javax.swing.JTable();
        messageText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1400, 900));

        backgroundPanel.setBackground(new java.awt.Color(0, 153, 153));
        backgroundPanel.setForeground(new java.awt.Color(255, 255, 255));

        formPanel.setBackground(new java.awt.Color(0, 102, 102));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Admn. No:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Month:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Fine:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("count:");

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboActionPerformed(evt);
            }
        });

        txtFine.setText("0 ");
        txtFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFineActionPerformed(evt);
            }
        });

        increaseCountBtn.setBackground(new java.awt.Color(0, 51, 51));
        increaseCountBtn.setForeground(new java.awt.Color(255, 255, 255));
        increaseCountBtn.setText("Increase");
        increaseCountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseCountBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(0, 51, 51));
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        txtCount.setText("0");
        txtCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountActionPerformed(evt);
            }
        });

        insertBtn.setBackground(new java.awt.Color(0, 51, 51));
        insertBtn.setForeground(new java.awt.Color(255, 255, 255));
        insertBtn.setText("Insert");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        insertAllBtn.setBackground(new java.awt.Color(0, 51, 51));
        insertAllBtn.setForeground(new java.awt.Color(255, 255, 255));
        insertAllBtn.setText("Insert all inmates into month");
        insertAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertAllBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(0, 51, 51));
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formPanelLayout = new javax.swing.GroupLayout(formPanel);
        formPanel.setLayout(formPanelLayout);
        formPanelLayout.setHorizontalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addComponent(updateBtn)
                        .addGap(42, 42, 42)
                        .addComponent(insertBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteBtn))
                    .addGroup(formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6)))
                        .addGap(29, 29, 29)
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(admnCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(monthCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFine)
                            .addGroup(formPanelLayout.createSequentialGroup()
                                .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(increaseCountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(insertAllBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        formPanelLayout.setVerticalGroup(
            formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formPanelLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(insertAllBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(admnCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formPanelLayout.createSequentialGroup()
                        .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(increaseCountBtn)
                            .addComponent(txtCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addComponent(txtFine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(formPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(insertBtn)
                    .addComponent(deleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(69, 69, 69))
        );

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MARK ATTENDENCE");

        homeBtn.setBackground(new java.awt.Color(0, 51, 51));
        homeBtn.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        homeBtn.setForeground(new java.awt.Color(255, 255, 255));
        homeBtn.setText("HOME");
        homeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBtnActionPerformed(evt);
            }
        });

        attendenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admn no.", "Name", "count", "fine"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        attendenceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendenceTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(attendenceTable);

        messageText.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        messageText.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(500, 500, 500)
                        .addComponent(jLabel1))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addComponent(formPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageText, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                    .addComponent(formPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(messageText, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void update_table(String month){
            try {     
            pst = con.prepareStatement("SELECT I.admnno, count_no, fine, name from attendence as A, inmates as I where month = ? and I.admnno = A.admnno");
            pst.setString(1, month);
            rs = pst.executeQuery();

            DefaultTableModel dtm = (DefaultTableModel) attendenceTable.getModel();
            dtm.setRowCount(0);
            

            while(rs.next()){
                dtm.addRow(new Object[] { rs.getString("admnno"), rs.getString("name"), rs.getString("count_no"), rs.getString("fine")});
            }
        }
        catch (SQLException ex) {
            //Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    private void getCombo() {
        try {     
            pst = con.prepareStatement("SELECT admnno FROM inmates");
            rs = pst.executeQuery();
  
            while (rs.next())
            {               
               admnCombo.addItem(rs.getString("admnno"));
            }//end while


        }
        catch (SQLException ex) {
            Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void homeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBtnActionPerformed
        // TODO add your handling code here:
        new Home().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_homeBtnActionPerformed

    private void monthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboActionPerformed
        // TODO add your handling code here:
        String month = monthCombo.getSelectedItem().toString();
        
        update_table(month);
    }//GEN-LAST:event_monthComboActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        String admnNo = admnCombo.getSelectedItem().toString();
        String count = txtCount.getText();
        String fine = txtFine.getText();
        String month = monthCombo.getSelectedItem().toString();
        
        try {
            pst = con.prepareStatement("update attendence set count_no=?, fine=? where admnno=? and month=?");
            pst.setString(1, count);
            pst.setString(2, fine);
            pst.setString(3, admnNo);
            pst.setString(4, month);

            pst.executeUpdate();
        
            messageText.setForeground(Color.decode("#130a40"));
            messageText.setText("Successfully updated count and fine");
        
            
            // clear the text boxes
            //txtAdmnno.requestFocus();
            

            // DefaultTableModel dtm = (DefaultTableModel) inmateTable.getModel();            
            // dtm.addRow(new Object[] {admnNo, name, branch, semester});
            update_table(month);
        } 
        catch(SQLIntegrityConstraintViolationException ex){
            messageText.setForeground(Color.decode("#1a0105"));
            messageText.setText("Cannot work");
            //Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SQLException ex) {
            messageText.setForeground(Color.decode("#1a0105"));
            messageText.setText("Could not update value");
            //Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_updateBtnActionPerformed

    private void txtCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountActionPerformed

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        // TODO add your handling code here:
        String admnNo = admnCombo.getSelectedItem().toString();
        String count = txtCount.getText();
        String fine = txtFine.getText();
        String month = monthCombo.getSelectedItem().toString();
        
                try {
            pst = con.prepareStatement("insert into attendence values((?),(?),(?),(?))");
            pst.setString(1, admnNo);
            pst.setString(2, month);
            pst.setString(3, count);
            pst.setString(4, fine);

            pst.executeUpdate();
        
            messageText.setForeground(Color.decode("#130a40"));
            messageText.setText("Successfully added entry");
        
            

            

            // DefaultTableModel dtm = (DefaultTableModel) inmateTable.getModel();            
            // dtm.addRow(new Object[] {admnNo, name, branch, semester});
            update_table(month);
        } 
        catch(SQLIntegrityConstraintViolationException ex){
            messageText.setForeground(Color.decode("#1a0105"));
            messageText.setText("Data already exists in database");
            Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SQLException ex) {
            messageText.setForeground(Color.decode("#1a0105"));
            messageText.setText("Could not add record to the database");
            Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_insertBtnActionPerformed

    private void attendenceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendenceTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) attendenceTable.getModel();
        int index = attendenceTable.getSelectedRow();
        
        //txtAdmnno.setText(dtm.getValueAt(index, 0).toString());
        admnCombo.setSelectedItem(dtm.getValueAt(index, 0).toString());
        monthCombo.setSelectedItem(dtm.getValueAt(index, 1).toString());
        txtCount.setText(dtm.getValueAt(index, 2).toString());
        txtFine.setText(dtm.getValueAt(index, 3).toString());
    }//GEN-LAST:event_attendenceTableMouseClicked

    private void increaseCountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseCountBtnActionPerformed
        // TODO add your handling code here:
        int count  = Integer.parseInt(txtCount.getText());
        count++;
        txtCount.setText(String.valueOf(count));
    }//GEN-LAST:event_increaseCountBtnActionPerformed

    private void txtFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFineActionPerformed

    private void insertAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertAllBtnActionPerformed
        // TODO add your handling code here:
            String month = monthCombo.getSelectedItem().toString();
        
        try {
            
         
                    
                    
            pst = con.prepareStatement("select admnno from inmates");
            rs = pst.executeQuery();
            while(rs.next()){
                pst2 = con.prepareStatement("insert into attendence values((?),(?),(?),(?))");
                pst2.setString(1, rs.getString("admnno"));
                pst2.setString(2, month);
                pst2.setString(3, "0");
                pst2.setString(4, "0");

                pst2.executeUpdate();
            }
            
            
            
            
            messageText.setForeground(Color.decode("#130a40"));
            messageText.setText("Successfully inserted everyone");
        
            // DefaultTableModel dtm = (DefaultTableModel) inmateTable.getModel();            
            // dtm.addRow(new Object[] {admnNo, name, branch, semester});
            update_table(month);
        } 
        catch(SQLIntegrityConstraintViolationException ex){
            messageText.setForeground(Color.decode("#1a0105"));
            messageText.setText("Data already exists in database");
            Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SQLException ex) {
            messageText.setForeground(Color.decode("#1a0105"));
            messageText.setText("Could not add record to the database");
            Logger.getLogger(addInmate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_insertAllBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        String admnNo = admnCombo.getSelectedItem().toString();
        String month = monthCombo.getSelectedItem().toString();
        try {
            pst = con.prepareStatement("DELETE FROM attendence WHERE admnno=? AND month=?;");

            pst.setString(1, admnNo);
            pst.setString(2, month);
            pst.executeUpdate();
        
            messageText.setForeground(Color.decode("#130a40"));
            messageText.setText("Successfully deleted entry");
        
           
            update_table(month);
        } 
        catch (SQLException ex) {
            messageText.setForeground(Color.decode("#1a0105"));
            messageText.setText("Cannot delete entry");
            //Logger.getLogger(updateAttendence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateAttendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateAttendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateAttendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateAttendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateAttendence().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> admnCombo;
    private javax.swing.JTable attendenceTable;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JPanel formPanel;
    private javax.swing.JButton homeBtn;
    private javax.swing.JButton increaseCountBtn;
    private javax.swing.JButton insertAllBtn;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel messageText;
    private javax.swing.JComboBox<String> monthCombo;
    private javax.swing.JTextField txtCount;
    private javax.swing.JTextField txtFine;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
